Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to the resourses
    Type: String

Resources:
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http traffic to loadBalancer
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPC-ID
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-loadbalancer-security-group

  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http traffic to host and ssh from local ips
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPC-ID
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-server-security-group
  # ServerLaunchConfig:
  # Type: AWS::AutoScaling::LaunchConfiguration
  # Properties:
  #   UserData:
  #     fn:Base64: !Sub |
  #       #!/bin/bash
  #       # Install Apache 2
  #       apt-get update -y
  #       apt-get install unzip awscli -y
  #       apt-get install apache2 -y
  #       systemctl start apache2.service
  #       cd /var/www/html
  #       # Copy the web application archive
  #       aws s3 cp s3://${S3CodeBucketName}/${S3CodeArchive} .
  #       unzip -o ${S3CodeArchive}
  #   SecurityGroups:
  #   - Ref: ServerSecurityGroup
  #   # TODO-----t2.micro is free with (1vcpu , 1 gb memory), but we need t3.micro(2vCPU, 4 GB memory)
  #   InstanceType: t2.micro
  #   ImageId: ami-0a634ae95e11c6f91
  #   BlockDeviceMappings:
  #   - DeviceName: "/dev/sdk"
  #     Ebs:
  #       VolumeSize: '10'
  # ServerAutoScalingGroup:
  # Type: AWS::AutoScaling::AutoScalingGroup
  # Properties:
  #   VPCZoneIdentifier:
  #   - Fn::ImportValue:
  #     !Sub ${EnvironmentName}-PVT-NETS
  #   LaunchConfigurationName:
  #     Ref: serverLaunchConfig
  #   MinSize: '1'
  #   MaxSize: '1'
